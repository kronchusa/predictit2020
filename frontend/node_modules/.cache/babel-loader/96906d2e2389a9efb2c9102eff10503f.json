{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\WinUser\\\\PycharmProjects\\\\predictit2020\\\\frontend\\\\src\\\\App.js\";\nimport React from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport USAMap from \"react-usa-map\";\nconst ELECTORAL_VOTES = {\n  AL: 9,\n  AK: 3,\n  AZ: 11,\n  AR: 6,\n  CA: 55,\n  CO: 9,\n  CT: 7,\n  DC: 3,\n  DE: 3,\n  FL: 29,\n  GA: 16,\n  HI: 4,\n  ID: 4,\n  IL: 20,\n  IN: 11,\n  IA: 6,\n  KS: 6,\n  KY: 8,\n  LA: 8,\n  ME: 4,\n  MD: 10,\n  MA: 11,\n  MI: 16,\n  MN: 10,\n  MS: 6,\n  MO: 10,\n  MT: 3,\n  NE: 5,\n  NV: 6,\n  NH: 4,\n  NJ: 14,\n  NM: 5,\n  NY: 29,\n  NC: 15,\n  ND: 3,\n  OH: 18,\n  OK: 7,\n  OR: 7,\n  PA: 20,\n  RI: 4,\n  SC: 9,\n  SD: 3,\n  TN: 11,\n  TX: 38,\n  UT: 6,\n  VT: 3,\n  VA: 13,\n  WA: 12,\n  WV: 5,\n  WI: 10,\n  WY: 3\n};\n\nfunction App() {\n  const [states, setStates] = React.useState({});\n  const [electoralVotes, setElectoralVotes] = React.useState({\n    democrats: 0,\n    republicans: 0\n  });\n  const isFilled = states.length == 51;\n  console.log(Object.keys(states).length);\n\n  const mapHandler = event => {\n    const stateId = event.target.dataset.name;\n    let newStates = JSON.parse(JSON.stringify(states));\n\n    if (stateId in newStates) {\n      if (newStates[stateId].fill === 'navy') {\n        newStates[stateId].fill = 'red';\n        setElectoralVotes({\n          democrats: electoralVotes.democrats - ELECTORAL_VOTES[stateId],\n          republicans: electoralVotes.republicans + ELECTORAL_VOTES[stateId]\n        });\n      } else {\n        newStates[stateId].fill = 'navy';\n        setElectoralVotes({\n          democrats: electoralVotes.democrats + ELECTORAL_VOTES[stateId],\n          republicans: electoralVotes.republicans - ELECTORAL_VOTES[stateId]\n        });\n      }\n    } else {\n      newStates[stateId] = {\n        'fill': 'navy'\n      };\n      setElectoralVotes({ ...electoralVotes,\n        democrats: electoralVotes.democrats + ELECTORAL_VOTES[stateId]\n      });\n    }\n\n    console.log(newStates);\n    setStates(newStates);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 5\n    }\n  }, \"Republicans: \", electoralVotes.republicans, \"  Democrats: \", electoralVotes.democrats, \" \", isFilled, /*#__PURE__*/React.createElement(USAMap, {\n    customize: states,\n    onClick: mapHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/WinUser/PycharmProjects/predictit2020/frontend/src/App.js"],"names":["React","USAMap","ELECTORAL_VOTES","AL","AK","AZ","AR","CA","CO","CT","DC","DE","FL","GA","HI","ID","IL","IN","IA","KS","KY","LA","ME","MD","MA","MI","MN","MS","MO","MT","NE","NV","NH","NJ","NM","NY","NC","ND","OH","OK","OR","PA","RI","SC","SD","TN","TX","UT","VT","VA","WA","WV","WI","WY","App","states","setStates","useState","electoralVotes","setElectoralVotes","democrats","republicans","isFilled","length","console","log","Object","keys","mapHandler","event","stateId","target","dataset","name","newStates","JSON","parse","stringify","fill"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,OAAO,WAAP;AAEA,OAAOC,MAAP,MAAmB,eAAnB;AAGA,MAAMC,eAAe,GAAG;AACpBC,EAAAA,EAAE,EAAE,CADgB;AAEpBC,EAAAA,EAAE,EAAE,CAFgB;AAGpBC,EAAAA,EAAE,EAAE,EAHgB;AAIpBC,EAAAA,EAAE,EAAE,CAJgB;AAKpBC,EAAAA,EAAE,EAAE,EALgB;AAMpBC,EAAAA,EAAE,EAAE,CANgB;AAOpBC,EAAAA,EAAE,EAAE,CAPgB;AAQpBC,EAAAA,EAAE,EAAE,CARgB;AASpBC,EAAAA,EAAE,EAAE,CATgB;AAUpBC,EAAAA,EAAE,EAAE,EAVgB;AAWpBC,EAAAA,EAAE,EAAE,EAXgB;AAYpBC,EAAAA,EAAE,EAAE,CAZgB;AAapBC,EAAAA,EAAE,EAAE,CAbgB;AAcpBC,EAAAA,EAAE,EAAE,EAdgB;AAepBC,EAAAA,EAAE,EAAE,EAfgB;AAgBpBC,EAAAA,EAAE,EAAE,CAhBgB;AAiBpBC,EAAAA,EAAE,EAAE,CAjBgB;AAkBpBC,EAAAA,EAAE,EAAE,CAlBgB;AAmBpBC,EAAAA,EAAE,EAAE,CAnBgB;AAoBpBC,EAAAA,EAAE,EAAE,CApBgB;AAqBpBC,EAAAA,EAAE,EAAE,EArBgB;AAsBpBC,EAAAA,EAAE,EAAE,EAtBgB;AAuBpBC,EAAAA,EAAE,EAAE,EAvBgB;AAwBpBC,EAAAA,EAAE,EAAE,EAxBgB;AAyBpBC,EAAAA,EAAE,EAAE,CAzBgB;AA0BpBC,EAAAA,EAAE,EAAE,EA1BgB;AA2BpBC,EAAAA,EAAE,EAAE,CA3BgB;AA4BpBC,EAAAA,EAAE,EAAE,CA5BgB;AA6BpBC,EAAAA,EAAE,EAAE,CA7BgB;AA8BpBC,EAAAA,EAAE,EAAE,CA9BgB;AA+BpBC,EAAAA,EAAE,EAAE,EA/BgB;AAgCpBC,EAAAA,EAAE,EAAE,CAhCgB;AAiCpBC,EAAAA,EAAE,EAAE,EAjCgB;AAkCpBC,EAAAA,EAAE,EAAE,EAlCgB;AAmCpBC,EAAAA,EAAE,EAAE,CAnCgB;AAoCpBC,EAAAA,EAAE,EAAE,EApCgB;AAqCpBC,EAAAA,EAAE,EAAE,CArCgB;AAsCpBC,EAAAA,EAAE,EAAE,CAtCgB;AAuCpBC,EAAAA,EAAE,EAAE,EAvCgB;AAwCpBC,EAAAA,EAAE,EAAE,CAxCgB;AAyCpBC,EAAAA,EAAE,EAAE,CAzCgB;AA0CpBC,EAAAA,EAAE,EAAE,CA1CgB;AA2CpBC,EAAAA,EAAE,EAAE,EA3CgB;AA4CpBC,EAAAA,EAAE,EAAE,EA5CgB;AA6CpBC,EAAAA,EAAE,EAAE,CA7CgB;AA8CpBC,EAAAA,EAAE,EAAE,CA9CgB;AA+CpBC,EAAAA,EAAE,EAAE,EA/CgB;AAgDpBC,EAAAA,EAAE,EAAE,EAhDgB;AAiDpBC,EAAAA,EAAE,EAAE,CAjDgB;AAkDpBC,EAAAA,EAAE,EAAE,EAlDgB;AAmDpBC,EAAAA,EAAE,EAAE;AAnDgB,CAAxB;;AAsDA,SAASC,GAAT,GAAe;AAEX,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBxD,KAAK,CAACyD,QAAN,CAAe,EAAf,CAA5B;AAGA,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsC3D,KAAK,CAACyD,QAAN,CAAe;AACvDG,IAAAA,SAAS,EAAE,CAD4C;AAEvDC,IAAAA,WAAW,EAAE;AAF0C,GAAf,CAA5C;AAKF,QAAMC,QAAQ,GAAGP,MAAM,CAACQ,MAAP,IAAiB,EAAlC;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAYC,MAAM,CAACC,IAAP,CAAYZ,MAAZ,EAAoBQ,MAAhC;;AAEA,QAAMK,UAAU,GAAIC,KAAD,IAAW;AAC5B,UAAMC,OAAO,GAAGD,KAAK,CAACE,MAAN,CAAaC,OAAb,CAAqBC,IAArC;AACA,QAAIC,SAAS,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAetB,MAAf,CAAX,CAAhB;;AACA,QAAIe,OAAO,IAAII,SAAf,EAA0B;AACtB,UAAGA,SAAS,CAACJ,OAAD,CAAT,CAAmBQ,IAAnB,KAA4B,MAA/B,EAAuC;AACnCJ,QAAAA,SAAS,CAACJ,OAAD,CAAT,CAAmBQ,IAAnB,GAA0B,KAA1B;AACAnB,QAAAA,iBAAiB,CAAC;AACdC,UAAAA,SAAS,EAAEF,cAAc,CAACE,SAAf,GAA2B1D,eAAe,CAACoE,OAAD,CADvC;AAEdT,UAAAA,WAAW,EAAEH,cAAc,CAACG,WAAf,GAA6B3D,eAAe,CAACoE,OAAD;AAF3C,SAAD,CAAjB;AAIH,OAND,MAOK;AACDI,QAAAA,SAAS,CAACJ,OAAD,CAAT,CAAmBQ,IAAnB,GAA0B,MAA1B;AACAnB,QAAAA,iBAAiB,CAAC;AACdC,UAAAA,SAAS,EAAEF,cAAc,CAACE,SAAf,GAA2B1D,eAAe,CAACoE,OAAD,CADvC;AAEdT,UAAAA,WAAW,EAAEH,cAAc,CAACG,WAAf,GAA6B3D,eAAe,CAACoE,OAAD;AAF3C,SAAD,CAAjB;AAIH;AACJ,KAfD,MAeO;AACHI,MAAAA,SAAS,CAACJ,OAAD,CAAT,GAAqB;AAAC,gBAAQ;AAAT,OAArB;AACAX,MAAAA,iBAAiB,CAAC,EAAC,GAAGD,cAAJ;AAAoBE,QAAAA,SAAS,EAAEF,cAAc,CAACE,SAAf,GAA2B1D,eAAe,CAACoE,OAAD;AAAzE,OAAD,CAAjB;AACH;;AACDN,IAAAA,OAAO,CAACC,GAAR,CAAYS,SAAZ;AACAlB,IAAAA,SAAS,CAACkB,SAAD,CAAT;AACD,GAxBD;;AAyBA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACgBhB,cAAc,CAACG,WAD/B,mBACyDH,cAAc,CAACE,SADxE,OACoFE,QADpF,eAEE,oBAAC,MAAD;AAAQ,IAAA,SAAS,EAAEP,MAAnB;AAA2B,IAAA,OAAO,EAAEa,UAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAMD;;AAED,eAAed,GAAf","sourcesContent":["import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nimport USAMap from \"react-usa-map\";\n\n\nconst ELECTORAL_VOTES = {\n    AL: 9,\n    AK: 3,\n    AZ: 11,\n    AR: 6,\n    CA: 55,\n    CO: 9,\n    CT: 7,\n    DC: 3,\n    DE: 3,\n    FL: 29,\n    GA: 16,\n    HI: 4,\n    ID: 4,\n    IL: 20,\n    IN: 11,\n    IA: 6,\n    KS: 6,\n    KY: 8,\n    LA: 8,\n    ME: 4,\n    MD: 10,\n    MA: 11,\n    MI: 16,\n    MN: 10,\n    MS: 6,\n    MO: 10,\n    MT: 3,\n    NE: 5,\n    NV: 6,\n    NH: 4,\n    NJ: 14,\n    NM: 5,\n    NY: 29,\n    NC: 15,\n    ND: 3,\n    OH: 18,\n    OK: 7,\n    OR: 7,\n    PA: 20,\n    RI: 4,\n    SC: 9,\n    SD: 3,\n    TN: 11,\n    TX: 38,\n    UT: 6,\n    VT: 3,\n    VA: 13,\n    WA: 12,\n    WV: 5,\n    WI: 10,\n    WY: 3\n}\n\nfunction App() {\n\n    const [states, setStates] = React.useState({\n    })\n\n    const [electoralVotes, setElectoralVotes] = React.useState({\n        democrats: 0,\n        republicans: 0,\n    })\n\n  const isFilled = states.length == 51\n\n  console.log(Object.keys(states).length)\n\n  const mapHandler = (event) => {\n    const stateId = event.target.dataset.name\n    let newStates = JSON.parse(JSON.stringify(states))\n    if (stateId in newStates) {\n        if(newStates[stateId].fill === 'navy') {\n            newStates[stateId].fill = 'red'\n            setElectoralVotes({\n                democrats: electoralVotes.democrats - ELECTORAL_VOTES[stateId],\n                republicans: electoralVotes.republicans + ELECTORAL_VOTES[stateId],\n            })\n        }\n        else {\n            newStates[stateId].fill = 'navy'\n            setElectoralVotes({\n                democrats: electoralVotes.democrats + ELECTORAL_VOTES[stateId],\n                republicans: electoralVotes.republicans - ELECTORAL_VOTES[stateId],\n            })\n        }\n    } else {\n        newStates[stateId] = {'fill': 'navy'}\n        setElectoralVotes({...electoralVotes, democrats: electoralVotes.democrats + ELECTORAL_VOTES[stateId]})\n    }\n    console.log(newStates)\n    setStates(newStates)\n  };\n  return (\n    <div className=\"App\">\n      Republicans: {electoralVotes.republicans}  Democrats: {electoralVotes.democrats} {isFilled}\n      <USAMap customize={states} onClick={mapHandler} />\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}