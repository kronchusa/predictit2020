{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\WinUser\\\\PycharmProjects\\\\predictit2020\\\\frontend\\\\src\\\\App.js\";\nimport React from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport USAMap from \"react-usa-map\";\nimport ELECTORAL_VOTES from \"./electoral_votes\";\nimport { Button, TextField } from \"@material-ui/core\";\n\nfunction getCookie(name) {\n  var cookieValue = null;\n\n  if (document.cookie && document.cookie !== '') {\n    var cookies = document.cookie.split(';');\n\n    for (var i = 0; i < cookies.length; i++) {\n      var cookie = cookies[i]; // Does this cookie string begin with the name we want?\n\n      if (cookie.substring(1, name.length + 1) === name) {\n        cookieValue = decodeURIComponent(cookie.substring(name.length + 2));\n        break;\n      }\n    }\n  }\n\n  return cookieValue;\n}\n\nfunction App() {\n  const [loadingStatus, setLoadingStatus] = React.useState(0);\n  const [states, setStates] = React.useState({});\n  const [electoralVotes, setElectoralVotes] = React.useState({\n    democrats: 0,\n    republicans: 0\n  });\n  const [saveMessage, setSaveMessage] = React.useState(\"\");\n  const isFilled = Object.keys(states).length == 51;\n  const today = new Date();\n  const canSave = today < new Date(2020, 10, 3);\n  React.useEffect(() => {\n    const fetchUserPrediction = async () => {\n      const res = await fetch(`/load/`);\n      if (res.status === 403) setLoadingStatus(2);else {\n        const raw_data = await res.json();\n        let json_data = JSON.parse(raw_data.prediction);\n        delete json_data.id;\n        delete json_data.user;\n        json_data.ID = json_data.IDA;\n        delete json_data.IDA;\n        setElectoralVotes({\n          democrats: json_data.electoral_votes_dem,\n          republicans: json_data.electoral_votes_rep\n        });\n        delete json_data.electoral_votes_dem;\n        delete json_data.electoral_votes_rep;\n        setStates(json_data);\n        setLoadingStatus(1);\n      }\n    };\n\n    fetchUserPrediction();\n  }, []);\n\n  const mapHandler = event => {\n    setSaveMessage(\"\");\n    const stateId = event.target.dataset.name == 'DC' ? 'DC2' : event.target.dataset.name;\n    let newStates = JSON.parse(JSON.stringify(states));\n\n    if (stateId in newStates) {\n      if (newStates[stateId].fill === 'navy') {\n        newStates[stateId].fill = 'red';\n        setElectoralVotes({\n          democrats: electoralVotes.democrats - ELECTORAL_VOTES[stateId],\n          republicans: electoralVotes.republicans + ELECTORAL_VOTES[stateId]\n        });\n      } else {\n        newStates[stateId].fill = 'navy';\n        setElectoralVotes({\n          democrats: electoralVotes.democrats + ELECTORAL_VOTES[stateId],\n          republicans: electoralVotes.republicans - ELECTORAL_VOTES[stateId]\n        });\n      }\n    } else {\n      newStates[stateId] = {\n        'fill': 'navy'\n      };\n      setElectoralVotes({ ...electoralVotes,\n        democrats: electoralVotes.democrats + ELECTORAL_VOTES[stateId]\n      });\n    }\n\n    setStates(newStates);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 5\n    }\n  }, loadingStatus === 0 ? \"Loading\" : loadingStatus === 2 ? \"Not Logged in properly, unable to load\" : loadingStatus === 1 && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      position: \"relative\",\n      marginTop: '50px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      position: \"absolute\",\n      left: \"0px\",\n      top: \"-72px\",\n      height: '40px',\n      width: `${electoralVotes.republicans / 538 * 100}%`,\n      background: \"red\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      position: \"absolute\",\n      right: \"0px\",\n      top: \"-72px\",\n      height: '40px',\n      width: `${electoralVotes.democrats / 538 * 100}%`,\n      background: \"navy\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      position: \"absolute\",\n      left: \"5%\",\n      top: \"-85px\",\n      color: '#999'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 25\n    }\n  }, \"Republicans: \", electoralVotes.republicans)), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      position: \"absolute\",\n      right: \"5%\",\n      top: \"-85px\",\n      color: '#999'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 25\n    }\n  }, \"Democrats: \", electoralVotes.democrats)), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      marginTop: '100px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(USAMap, {\n    customize: states,\n    onClick: mapHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 25\n    }\n  }))), canSave ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: async ev => {\n      const res = await fetch(`/save/`, {\n        method: 'POST',\n        mode: 'cors',\n        headers: {\n          'X-CSRFToken': getCookie(\"csrftoken\"),\n          'Content-Type': 'application/json',\n          'Accept': 'application/json'\n        },\n        body: JSON.stringify({\n          states: states,\n          electoralVotes: electoralVotes\n        })\n      });\n      if (res.status === 200) setSaveMessage(\"Saved! You're all set! (You can modify it until November 3rd)\");else setSaveMessage(\"Did not save properly!  Please try clicking save again\");\n    },\n    variant: \"contained\",\n    disabled: !isFilled,\n    color: \"primary\",\n    style: {\n      marginTop: '50px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 29\n    }\n  }, isFilled ? \"Save My Prediction\" : \"Not Finished\")), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      marginTop: '50px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 28\n    }\n  }, \"Share Link\"), /*#__PURE__*/React.createElement(TextField, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 28\n    }\n  }))) : /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 21\n    }\n  }, \"It is November 3rd (Or after) and you can't update your prediction anymore.\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 17\n    }\n  }, saveMessage)));\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/WinUser/PycharmProjects/predictit2020/frontend/src/App.js"],"names":["React","USAMap","ELECTORAL_VOTES","Button","TextField","getCookie","name","cookieValue","document","cookie","cookies","split","i","length","substring","decodeURIComponent","App","loadingStatus","setLoadingStatus","useState","states","setStates","electoralVotes","setElectoralVotes","democrats","republicans","saveMessage","setSaveMessage","isFilled","Object","keys","today","Date","canSave","useEffect","fetchUserPrediction","res","fetch","status","raw_data","json","json_data","JSON","parse","prediction","id","user","ID","IDA","electoral_votes_dem","electoral_votes_rep","mapHandler","event","stateId","target","dataset","newStates","stringify","fill","position","marginTop","left","top","height","width","background","right","color","ev","method","mode","headers","body"],"mappings":"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","sourcesContent":["import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nimport USAMap from \"react-usa-map\";\n\nimport ELECTORAL_VOTES from \"./electoral_votes\"\n\nimport {Button, TextField} from \"@material-ui/core\"\n\nfunction getCookie(name) {\n    var cookieValue = null;\n    if (document.cookie && document.cookie !== '') {\n        var cookies = document.cookie.split(';');\n        for (var i = 0; i < cookies.length; i++) {\n            var cookie = cookies[i]\n            // Does this cookie string begin with the name we want?\n            if (cookie.substring(1, name.length + 1) === name) {\n                cookieValue = decodeURIComponent(cookie.substring(name.length + 2));\n                break;\n            }\n        }\n    }\n    return cookieValue;\n}\n\n\nfunction App() {\n\n    const [loadingStatus, setLoadingStatus] = React.useState(0)\n    const [states, setStates] = React.useState({})\n    const [electoralVotes, setElectoralVotes] = React.useState({\n        democrats: 0,\n        republicans: 0,\n    })\n    const [saveMessage, setSaveMessage] = React.useState(\"\")\n\n  const isFilled = Object.keys(states).length == 51\n\n  const today = new Date()\n  const canSave = today < new Date(2020, 10, 3)\n\n  React.useEffect(() => {\n    const fetchUserPrediction = async () => {\n        const res = await fetch(`/load/`)\n        if(res.status === 403) setLoadingStatus(2)\n        else {\n            const raw_data = await res.json()\n            let json_data = JSON.parse(raw_data.prediction)\n            delete json_data.id\n            delete json_data.user\n            json_data.ID = json_data.IDA\n            delete json_data.IDA\n            setElectoralVotes({democrats: json_data.electoral_votes_dem, republicans: json_data.electoral_votes_rep})\n            delete json_data.electoral_votes_dem\n            delete json_data.electoral_votes_rep\n            setStates(json_data)\n            setLoadingStatus(1)\n        }\n    }\n\n    fetchUserPrediction()\n  }, [])\n\n  const mapHandler = (event) => {\n    setSaveMessage(\"\")\n    const stateId = event.target.dataset.name == 'DC' ? 'DC2' : event.target.dataset.name\n    let newStates = JSON.parse(JSON.stringify(states))\n    if (stateId in newStates) {\n        if(newStates[stateId].fill === 'navy') {\n            newStates[stateId].fill = 'red'\n            setElectoralVotes({\n                democrats: electoralVotes.democrats - ELECTORAL_VOTES[stateId],\n                republicans: electoralVotes.republicans + ELECTORAL_VOTES[stateId],\n            })\n        }\n        else {\n            newStates[stateId].fill = 'navy'\n            setElectoralVotes({\n                democrats: electoralVotes.democrats + ELECTORAL_VOTES[stateId],\n                republicans: electoralVotes.republicans - ELECTORAL_VOTES[stateId],\n            })\n        }\n    } else {\n        newStates[stateId] = {'fill': 'navy'}\n        setElectoralVotes({...electoralVotes, democrats: electoralVotes.democrats + ELECTORAL_VOTES[stateId]})\n    }\n    setStates(newStates)\n  };\n  return (\n    <div className=\"App\">\n        {loadingStatus === 0 ? \"Loading\" : loadingStatus === 2 ? \"Not Logged in properly, unable to load\" : loadingStatus === 1 && (\n            <>\n                <div style={{position: \"relative\", marginTop: '50px'}}>\n                    <div style={{position: \"absolute\", left: \"0px\" , top:\"-72px\", height: '40px', width: `${electoralVotes.republicans / 538 * 100}%` , background: \"red\"}}></div>\n                    <div style={{position: \"absolute\", right: \"0px\" , top:\"-72px\", height: '40px', width: `${electoralVotes.democrats / 538 * 100}%` , background: \"navy\"}}></div>\n                    <div style={{position: \"absolute\", left:\"5%\", top:\"-85px\", color: '#999' }}>\n                        <h3>Republicans: {electoralVotes.republicans}</h3>\n                    </div>\n\n                    <div style={{position: \"absolute\", right:\"5%\", top:\"-85px\", color: '#999'}}>\n                        <h3>Democrats: {electoralVotes.democrats}</h3>\n                    </div>\n                    <div style={{marginTop: '100px'}}>\n                        <USAMap customize={states} onClick={mapHandler}  />\n                    </div>\n                </div>\n                {canSave ? (\n                    <>\n                        <div>\n                            <Button\n                                onClick={async ev => {\n                                    const res = await fetch(`/save/`, {\n                                        method: 'POST',\n                                        mode: 'cors',\n                                        headers: {\n                                            'X-CSRFToken': getCookie(\"csrftoken\"),\n                                            'Content-Type': 'application/json',\n                                            'Accept': 'application/json'\n                                        },\n                                        body: JSON.stringify({states: states, electoralVotes: electoralVotes})\n                                    })\n                                    if(res.status === 200) setSaveMessage(\"Saved! You're all set! (You can modify it until November 3rd)\")\n                                    else setSaveMessage(\"Did not save properly!  Please try clicking save again\")\n                                }}\n                                variant=\"contained\" disabled={!isFilled} color=\"primary\" style={{marginTop: '50px'}}>\n                                {isFilled ? \"Save My Prediction\" : \"Not Finished\"}\n                            </Button>\n                        </div>\n                        <div style={{marginTop: '50px'}}>\n                           <p>Share Link</p>\n                           <TextField />\n                        </div>\n                    </>\n                ) : (\n                    <p>It is November 3rd (Or after) and you can't update your prediction anymore.</p>\n                )}\n\n                <p>{saveMessage}</p>\n            </>\n        )}\n\n\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}