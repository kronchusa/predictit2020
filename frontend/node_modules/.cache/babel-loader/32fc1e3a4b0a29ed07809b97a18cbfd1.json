{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\WinUser\\\\PycharmProjects\\\\predictit2020\\\\frontend\\\\src\\\\App.js\";\nimport React from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport USAMap from \"react-usa-map\";\nimport ELECTORAL_VOTES from \"./electoral_votes\";\nimport { Button } from \"@material-ui/core\";\n\nfunction getCookie(name) {\n  var cookieValue = null;\n\n  if (document.cookie && document.cookie !== '') {\n    var cookies = document.cookie.split(';');\n\n    for (var i = 0; i < cookies.length; i++) {\n      var cookie = cookies[i]; // Does this cookie string begin with the name we want?\n\n      if (cookie.substring(1, name.length + 1) === name) {\n        cookieValue = decodeURIComponent(cookie.substring(name.length + 2));\n        break;\n      }\n    }\n  }\n\n  return cookieValue;\n}\n\nfunction App() {\n  const [states, setStates] = React.useState({});\n  const [electoralVotes, setElectoralVotes] = React.useState({\n    democrats: 0,\n    republicans: 0\n  });\n  const isFilled = Object.keys(states).length == 51;\n  React.useEffect(() => {\n    const fetchUserPrediction = async () => {\n      const res = await fetch(`/load/`);\n      const raw_data = await res.json();\n      let json_data = JSON.parse(raw_data.prediction);\n      delete json_data.id;\n      delete json_data.user;\n      json_data.ID = json_data.IDA;\n      delete json_data.IDA;\n      setStates(json_data);\n    };\n\n    fetchUserPrediction();\n  }, []);\n\n  const mapHandler = event => {\n    const stateId = event.target.dataset.name == 'DC' ? 'DC2' : event.target.dataset.name;\n    let newStates = JSON.parse(JSON.stringify(states));\n\n    if (stateId in newStates) {\n      if (newStates[stateId].fill === 'navy') {\n        newStates[stateId].fill = 'red';\n        setElectoralVotes({\n          democrats: electoralVotes.democrats - ELECTORAL_VOTES[stateId],\n          republicans: electoralVotes.republicans + ELECTORAL_VOTES[stateId]\n        });\n      } else {\n        newStates[stateId].fill = 'navy';\n        setElectoralVotes({\n          democrats: electoralVotes.democrats + ELECTORAL_VOTES[stateId],\n          republicans: electoralVotes.republicans - ELECTORAL_VOTES[stateId]\n        });\n      }\n    } else {\n      newStates[stateId] = {\n        'fill': 'navy'\n      };\n      setElectoralVotes({ ...electoralVotes,\n        democrats: electoralVotes.democrats + ELECTORAL_VOTES[stateId]\n      });\n    }\n\n    setStates(newStates);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      position: \"relative\",\n      marginTop: '50px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      position: \"absolute\",\n      left: \"0px\",\n      top: \"-35px\",\n      height: '40px',\n      width: `${electoralVotes.republicans / 538 * 100}%`,\n      background: \"red\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      position: \"absolute\",\n      left: \"5%\",\n      top: \"-25px\",\n      color: '#999'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }\n  }, \"Republicans: \", electoralVotes.republicans), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      position: \"absolute\",\n      right: \"0px\",\n      top: \"-35px\",\n      height: '40px',\n      width: `${electoralVotes.democrats / 538 * 100}%`,\n      background: \"navy\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      position: \"absolute\",\n      right: \"5%\",\n      top: \"-25px\",\n      color: '#999'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }\n  }, \"Democrats: \", electoralVotes.democrats), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      marginTop: '50px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(USAMap, {\n    customize: states,\n    onClick: mapHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(Button, {\n    onClick: async ev => {\n      const res = await fetch(`/save/`, {\n        method: 'POST',\n        mode: 'cors',\n        headers: {\n          'X-CSRFToken': getCookie(\"csrftoken\"),\n          'Content-Type': 'application/json',\n          'Accept': 'application/json'\n        },\n        body: JSON.stringify({\n          states: states,\n          electoralVotes: electoralVotes\n        })\n      });\n    },\n    variant: \"contained\",\n    disabled: !isFilled,\n    color: \"primary\",\n    style: {\n      marginTop: '50px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }\n  }, isFilled ? \"Save\" : \"Not Finished\"));\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/WinUser/PycharmProjects/predictit2020/frontend/src/App.js"],"names":["React","USAMap","ELECTORAL_VOTES","Button","getCookie","name","cookieValue","document","cookie","cookies","split","i","length","substring","decodeURIComponent","App","states","setStates","useState","electoralVotes","setElectoralVotes","democrats","republicans","isFilled","Object","keys","useEffect","fetchUserPrediction","res","fetch","raw_data","json","json_data","JSON","parse","prediction","id","user","ID","IDA","mapHandler","event","stateId","target","dataset","newStates","stringify","fill","position","marginTop","left","top","height","width","background","color","right","ev","method","mode","headers","body"],"mappings":"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","sourcesContent":["import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nimport USAMap from \"react-usa-map\";\n\nimport ELECTORAL_VOTES from \"./electoral_votes\"\n\nimport {Button} from \"@material-ui/core\"\n\nfunction getCookie(name) {\n    var cookieValue = null;\n    if (document.cookie && document.cookie !== '') {\n        var cookies = document.cookie.split(';');\n        for (var i = 0; i < cookies.length; i++) {\n            var cookie = cookies[i]\n            // Does this cookie string begin with the name we want?\n            if (cookie.substring(1, name.length + 1) === name) {\n                cookieValue = decodeURIComponent(cookie.substring(name.length + 2));\n                break;\n            }\n        }\n    }\n    return cookieValue;\n}\n\n\nfunction App() {\n\n    const [states, setStates] = React.useState({})\n\n    const [electoralVotes, setElectoralVotes] = React.useState({\n        democrats: 0,\n        republicans: 0,\n    })\n\n  const isFilled = Object.keys(states).length == 51\n\n\n  React.useEffect(() => {\n    const fetchUserPrediction = async () => {\n        const res = await fetch(`/load/`)\n        const raw_data = await res.json()\n        let json_data = JSON.parse(raw_data.prediction)\n        delete json_data.id\n        delete json_data.user\n        json_data.ID = json_data.IDA\n        delete json_data.IDA\n        setStates(json_data)\n    }\n\n    fetchUserPrediction()\n  }, [])\n\n  const mapHandler = (event) => {\n    const stateId = event.target.dataset.name == 'DC' ? 'DC2' : event.target.dataset.name\n    let newStates = JSON.parse(JSON.stringify(states))\n    if (stateId in newStates) {\n        if(newStates[stateId].fill === 'navy') {\n            newStates[stateId].fill = 'red'\n            setElectoralVotes({\n                democrats: electoralVotes.democrats - ELECTORAL_VOTES[stateId],\n                republicans: electoralVotes.republicans + ELECTORAL_VOTES[stateId],\n            })\n        }\n        else {\n            newStates[stateId].fill = 'navy'\n            setElectoralVotes({\n                democrats: electoralVotes.democrats + ELECTORAL_VOTES[stateId],\n                republicans: electoralVotes.republicans - ELECTORAL_VOTES[stateId],\n            })\n        }\n    } else {\n        newStates[stateId] = {'fill': 'navy'}\n        setElectoralVotes({...electoralVotes, democrats: electoralVotes.democrats + ELECTORAL_VOTES[stateId]})\n    }\n    setStates(newStates)\n  };\n  return (\n    <div className=\"App\">\n        <div style={{position: \"relative\", marginTop: '50px'}}>\n            <div style={{position: \"absolute\", left: \"0px\" , top:\"-35px\", height: '40px', width: `${electoralVotes.republicans / 538 * 100}%` , background: \"red\"}}></div>\n            <div style={{position: \"absolute\", left:\"5%\", top:\"-25px\", color: '#999' }}>\n                Republicans: {electoralVotes.republicans}\n            </div>\n            <div style={{position: \"absolute\", right: \"0px\" , top:\"-35px\", height: '40px', width: `${electoralVotes.democrats / 538 * 100}%` , background: \"navy\"}}></div>\n            <div style={{position: \"absolute\", right:\"5%\", top:\"-25px\", color: '#999'}}>\n                Democrats: {electoralVotes.democrats}\n            </div>\n            <div style={{marginTop: '50px'}}>\n            <USAMap customize={states} onClick={mapHandler}  />\n        </div>\n        </div>\n        <Button\n            onClick={async ev => {\n                const res = await fetch(`/save/`, {\n                    method: 'POST',\n                    mode: 'cors',\n                    headers: {\n                        'X-CSRFToken': getCookie(\"csrftoken\"),\n                        'Content-Type': 'application/json',\n                        'Accept': 'application/json'\n                    },\n                    body: JSON.stringify({states: states, electoralVotes: electoralVotes})\n                })\n            }}\n            variant=\"contained\" disabled={!isFilled} color=\"primary\" style={{marginTop: '50px'}}>\n            {isFilled ? \"Save\" : \"Not Finished\"}\n        </Button>\n\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}