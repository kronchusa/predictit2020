{"ast":null,"code":"import _objectSpread from\"C:\\\\Users\\\\WinUser\\\\PycharmProjects\\\\predictit2020\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import _regeneratorRuntime from\"C:\\\\Users\\\\WinUser\\\\PycharmProjects\\\\predictit2020\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import _asyncToGenerator from\"C:\\\\Users\\\\WinUser\\\\PycharmProjects\\\\predictit2020\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"C:\\\\Users\\\\WinUser\\\\PycharmProjects\\\\predictit2020\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React from'react';import logo from\"./logo.svg\";import'./App.css';import USAMap from\"react-usa-map\";import ELECTORAL_VOTES from\"./electoral_votes\";import{Button}from\"@material-ui/core\";function getCookie(name){var cookieValue=null;if(document.cookie&&document.cookie!==''){var cookies=document.cookie.split(';');for(var i=0;i<cookies.length;i++){var cookie=cookies[i];// Does this cookie string begin with the name we want?\nif(cookie.substring(1,name.length+1)===name){cookieValue=decodeURIComponent(cookie.substring(name.length+2));break;}}}return cookieValue;}function App(){var _React$useState=React.useState(0),_React$useState2=_slicedToArray(_React$useState,2),loadingStatus=_React$useState2[0],setLoadingStatus=_React$useState2[1];var _React$useState3=React.useState({}),_React$useState4=_slicedToArray(_React$useState3,2),states=_React$useState4[0],setStates=_React$useState4[1];var _React$useState5=React.useState({democrats:0,republicans:0}),_React$useState6=_slicedToArray(_React$useState5,2),electoralVotes=_React$useState6[0],setElectoralVotes=_React$useState6[1];var _React$useState7=React.useState(\"\"),_React$useState8=_slicedToArray(_React$useState7,2),saveMessage=_React$useState8[0],setSaveMessage=_React$useState8[1];var isFilled=Object.keys(states).length==51;var today=new Date();var canSave=today<new Date(2020,10,3);React.useEffect(function(){var fetchUserPrediction=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var res,raw_data,json_data;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return fetch(\"/load/\");case 2:res=_context.sent;if(!(res.status===403)){_context.next=7;break;}setLoadingStatus(2);_context.next=20;break;case 7:_context.next=9;return res.json();case 9:raw_data=_context.sent;json_data=JSON.parse(raw_data.prediction);delete json_data.id;delete json_data.user;json_data.ID=json_data.IDA;delete json_data.IDA;setElectoralVotes({democrats:json_data.electoral_votes_dem,republicans:json_data.electoral_votes_rep});delete json_data.electoral_votes_dem;delete json_data.electoral_votes_rep;setStates(json_data);setLoadingStatus(1);case 20:case\"end\":return _context.stop();}}},_callee);}));return function fetchUserPrediction(){return _ref.apply(this,arguments);};}();fetchUserPrediction();},[]);var mapHandler=function mapHandler(event){setSaveMessage(\"\");var stateId=event.target.dataset.name=='DC'?'DC2':event.target.dataset.name;var newStates=JSON.parse(JSON.stringify(states));if(stateId in newStates){if(newStates[stateId].fill==='navy'){newStates[stateId].fill='red';setElectoralVotes({democrats:electoralVotes.democrats-ELECTORAL_VOTES[stateId],republicans:electoralVotes.republicans+ELECTORAL_VOTES[stateId]});}else{newStates[stateId].fill='navy';setElectoralVotes({democrats:electoralVotes.democrats+ELECTORAL_VOTES[stateId],republicans:electoralVotes.republicans-ELECTORAL_VOTES[stateId]});}}else{newStates[stateId]={'fill':'navy'};setElectoralVotes(_objectSpread(_objectSpread({},electoralVotes),{},{democrats:electoralVotes.democrats+ELECTORAL_VOTES[stateId]}));}setStates(newStates);};return/*#__PURE__*/React.createElement(\"div\",{className:\"App\"},loadingStatus===0?\"Loading\":loadingStatus===2?\"Not Logged in properly, unable to load\":loadingStatus===1&&/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"div\",{style:{position:\"relative\",marginTop:'50px'}},/*#__PURE__*/React.createElement(\"div\",{style:{position:\"absolute\",left:\"0px\",top:\"-72px\",height:'40px',width:\"\".concat(electoralVotes.republicans/538*100,\"%\"),background:\"red\"}}),/*#__PURE__*/React.createElement(\"div\",{style:{position:\"absolute\",left:\"5%\",top:\"-85px\",color:'#999'}},/*#__PURE__*/React.createElement(\"h3\",null,\"Republicans: \",electoralVotes.republicans)),/*#__PURE__*/React.createElement(\"div\",{style:{position:\"absolute\",right:\"0px\",top:\"-72px\",height:'40px',width:\"\".concat(electoralVotes.democrats/538*100,\"%\"),background:\"navy\"}}),/*#__PURE__*/React.createElement(\"div\",{style:{position:\"absolute\",right:\"5%\",top:\"-85px\",color:'#999'}},/*#__PURE__*/React.createElement(\"h3\",null,\"Democrats: \",electoralVotes.democrats)),/*#__PURE__*/React.createElement(\"div\",{style:{marginTop:'100px'}},/*#__PURE__*/React.createElement(USAMap,{customize:states,onClick:mapHandler}))),canSave?/*#__PURE__*/React.createElement(Button,{onClick:/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(ev){var res;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return fetch(\"/save/\",{method:'POST',mode:'cors',headers:{'X-CSRFToken':getCookie(\"csrftoken\"),'Content-Type':'application/json','Accept':'application/json'},body:JSON.stringify({states:states,electoralVotes:electoralVotes})});case 2:res=_context2.sent;if(res.status===200)setSaveMessage(\"Saved! You're all set! (You can modify it until November 3rd)\");else setSaveMessage(\"Did not save properly!  Please try clicking save again\");case 4:case\"end\":return _context2.stop();}}},_callee2);}));return function(_x){return _ref2.apply(this,arguments);};}(),variant:\"contained\",disabled:!isFilled,color:\"primary\",style:{marginTop:'50px'}},isFilled?\"Save My Prediction\":\"Not Finished\"):/*#__PURE__*/React.createElement(\"p\",null,\"It is November 3rd (Or after) and you can't update your prediction anymore.\"),/*#__PURE__*/React.createElement(\"p\",null,saveMessage)));}export default App;","map":{"version":3,"sources":["C:/Users/WinUser/PycharmProjects/predictit2020/frontend/src/App.js"],"names":["React","USAMap","ELECTORAL_VOTES","Button","getCookie","name","cookieValue","document","cookie","cookies","split","i","length","substring","decodeURIComponent","App","useState","loadingStatus","setLoadingStatus","states","setStates","democrats","republicans","electoralVotes","setElectoralVotes","saveMessage","setSaveMessage","isFilled","Object","keys","today","Date","canSave","useEffect","fetchUserPrediction","fetch","res","status","json","raw_data","json_data","JSON","parse","prediction","id","user","ID","IDA","electoral_votes_dem","electoral_votes_rep","mapHandler","event","stateId","target","dataset","newStates","stringify","fill","position","marginTop","left","top","height","width","background","color","right","ev","method","mode","headers","body"],"mappings":"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","sourcesContent":["import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nimport USAMap from \"react-usa-map\";\n\nimport ELECTORAL_VOTES from \"./electoral_votes\"\n\nimport {Button} from \"@material-ui/core\"\n\nfunction getCookie(name) {\n    var cookieValue = null;\n    if (document.cookie && document.cookie !== '') {\n        var cookies = document.cookie.split(';');\n        for (var i = 0; i < cookies.length; i++) {\n            var cookie = cookies[i]\n            // Does this cookie string begin with the name we want?\n            if (cookie.substring(1, name.length + 1) === name) {\n                cookieValue = decodeURIComponent(cookie.substring(name.length + 2));\n                break;\n            }\n        }\n    }\n    return cookieValue;\n}\n\n\nfunction App() {\n\n    const [loadingStatus, setLoadingStatus] = React.useState(0)\n    const [states, setStates] = React.useState({})\n    const [electoralVotes, setElectoralVotes] = React.useState({\n        democrats: 0,\n        republicans: 0,\n    })\n    const [saveMessage, setSaveMessage] = React.useState(\"\")\n\n  const isFilled = Object.keys(states).length == 51\n\n  const today = new Date()\n  const canSave = today < new Date(2020, 10, 3)\n\n  React.useEffect(() => {\n    const fetchUserPrediction = async () => {\n        const res = await fetch(`/load/`)\n        if(res.status === 403) setLoadingStatus(2)\n        else {\n            const raw_data = await res.json()\n            let json_data = JSON.parse(raw_data.prediction)\n            delete json_data.id\n            delete json_data.user\n            json_data.ID = json_data.IDA\n            delete json_data.IDA\n            setElectoralVotes({democrats: json_data.electoral_votes_dem, republicans: json_data.electoral_votes_rep})\n            delete json_data.electoral_votes_dem\n            delete json_data.electoral_votes_rep\n            setStates(json_data)\n            setLoadingStatus(1)\n        }\n    }\n\n    fetchUserPrediction()\n  }, [])\n\n  const mapHandler = (event) => {\n    setSaveMessage(\"\")\n    const stateId = event.target.dataset.name == 'DC' ? 'DC2' : event.target.dataset.name\n    let newStates = JSON.parse(JSON.stringify(states))\n    if (stateId in newStates) {\n        if(newStates[stateId].fill === 'navy') {\n            newStates[stateId].fill = 'red'\n            setElectoralVotes({\n                democrats: electoralVotes.democrats - ELECTORAL_VOTES[stateId],\n                republicans: electoralVotes.republicans + ELECTORAL_VOTES[stateId],\n            })\n        }\n        else {\n            newStates[stateId].fill = 'navy'\n            setElectoralVotes({\n                democrats: electoralVotes.democrats + ELECTORAL_VOTES[stateId],\n                republicans: electoralVotes.republicans - ELECTORAL_VOTES[stateId],\n            })\n        }\n    } else {\n        newStates[stateId] = {'fill': 'navy'}\n        setElectoralVotes({...electoralVotes, democrats: electoralVotes.democrats + ELECTORAL_VOTES[stateId]})\n    }\n    setStates(newStates)\n  };\n  return (\n    <div className=\"App\">\n        {loadingStatus === 0 ? \"Loading\" : loadingStatus === 2 ? \"Not Logged in properly, unable to load\" : loadingStatus === 1 && (\n            <>\n                <div style={{position: \"relative\", marginTop: '50px'}}>\n                    <div style={{position: \"absolute\", left: \"0px\" , top:\"-72px\", height: '40px', width: `${electoralVotes.republicans / 538 * 100}%` , background: \"red\"}}></div>\n                    <div style={{position: \"absolute\", left:\"5%\", top:\"-85px\", color: '#999' }}>\n                        <h3>Republicans: {electoralVotes.republicans}</h3>\n                    </div>\n                    <div style={{position: \"absolute\", right: \"0px\" , top:\"-72px\", height: '40px', width: `${electoralVotes.democrats / 538 * 100}%` , background: \"navy\"}}></div>\n                    <div style={{position: \"absolute\", right:\"5%\", top:\"-85px\", color: '#999'}}>\n                        <h3>Democrats: {electoralVotes.democrats}</h3>\n                    </div>\n                    <div style={{marginTop: '100px'}}>\n                        <USAMap customize={states} onClick={mapHandler}  />\n                    </div>\n                </div>\n                {canSave ? (\n                    <Button\n                        onClick={async ev => {\n                            const res = await fetch(`/save/`, {\n                                method: 'POST',\n                                mode: 'cors',\n                                headers: {\n                                    'X-CSRFToken': getCookie(\"csrftoken\"),\n                                    'Content-Type': 'application/json',\n                                    'Accept': 'application/json'\n                                },\n                                body: JSON.stringify({states: states, electoralVotes: electoralVotes})\n                            })\n                            if(res.status === 200) setSaveMessage(\"Saved! You're all set! (You can modify it until November 3rd)\")\n                            else setSaveMessage(\"Did not save properly!  Please try clicking save again\")\n                        }}\n                        variant=\"contained\" disabled={!isFilled} color=\"primary\" style={{marginTop: '50px'}}>\n                        {isFilled ? \"Save My Prediction\" : \"Not Finished\"}\n                    </Button>\n                ) : (\n                    <p>It is November 3rd (Or after) and you can't update your prediction anymore.</p>\n                )}\n\n                <p>{saveMessage}</p>\n            </>\n        )}\n\n\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}