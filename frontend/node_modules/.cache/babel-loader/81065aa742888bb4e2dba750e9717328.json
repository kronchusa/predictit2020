{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\WinUser\\\\PycharmProjects\\\\predictit2020\\\\frontend\\\\src\\\\App.js\";\nimport React from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport USAMap from \"react-usa-map\";\nimport ELECTORAL_VOTES from \"./electoral_votes\";\nimport { Button } from \"@material-ui/core\";\n\nfunction getCookie(name) {\n  var cookieValue = null;\n\n  if (document.cookie && document.cookie !== '') {\n    var cookies = document.cookie.split(';');\n\n    for (var i = 0; i < cookies.length; i++) {\n      var cookie = cookies[i]; // Does this cookie string begin with the name we want?\n\n      if (cookie.substring(1, name.length + 1) === name) {\n        cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n        break;\n      }\n    }\n  }\n\n  return cookieValue;\n}\n\nfunction App() {\n  const [states, setStates] = React.useState({});\n  const [electoralVotes, setElectoralVotes] = React.useState({\n    democrats: 0,\n    republicans: 0\n  });\n  const isFilled = Object.keys(states).length == 1;\n\n  const mapHandler = event => {\n    const stateId = event.target.dataset.name == 'DC' ? 'DC2' : event.target.dataset.name;\n    let newStates = JSON.parse(JSON.stringify(states));\n\n    if (stateId in newStates) {\n      if (newStates[stateId].fill === 'navy') {\n        newStates[stateId].fill = 'red';\n        setElectoralVotes({\n          democrats: electoralVotes.democrats - ELECTORAL_VOTES[stateId],\n          republicans: electoralVotes.republicans + ELECTORAL_VOTES[stateId]\n        });\n      } else {\n        newStates[stateId].fill = 'navy';\n        setElectoralVotes({\n          democrats: electoralVotes.democrats + ELECTORAL_VOTES[stateId],\n          republicans: electoralVotes.republicans - ELECTORAL_VOTES[stateId]\n        });\n      }\n    } else {\n      newStates[stateId] = {\n        'fill': 'navy'\n      };\n      setElectoralVotes({ ...electoralVotes,\n        democrats: electoralVotes.democrats + ELECTORAL_VOTES[stateId]\n      });\n    }\n\n    setStates(newStates);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      position: \"relative\",\n      marginTop: '50px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      position: \"absolute\",\n      left: \"0px\",\n      top: \"-35px\",\n      height: '40px',\n      width: `${electoralVotes.republicans / 538 * 100}%`,\n      background: \"red\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      position: \"absolute\",\n      left: \"5%\",\n      top: \"-25px\",\n      color: '#999'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  }, \"Republicans: \", electoralVotes.republicans), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      position: \"absolute\",\n      right: \"0px\",\n      top: \"-35px\",\n      height: '40px',\n      width: `${electoralVotes.democrats / 538 * 100}%`,\n      background: \"navy\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      position: \"absolute\",\n      right: \"5%\",\n      top: \"-25px\",\n      color: '#999'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }, \"Democrats: \", electoralVotes.democrats), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      marginTop: '50px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(USAMap, {\n    customize: states,\n    onClick: mapHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(Button, {\n    onClick: async ev => {\n      const res = await fetch(`/save/`, {\n        method: 'POST',\n        mode: 'cors',\n        headers: {\n          'X-CSRFToken': getCookie(\"csrftoken\"),\n          'Content-Type': 'application/json',\n          'Accept': 'application/json'\n        },\n        body: JSON.stringify(states)\n      });\n      console.log(res);\n    },\n    variant: \"contained\",\n    disabled: !isFilled,\n    color: \"primary\",\n    style: {\n      marginTop: '50px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }, isFilled ? \"Save\" : \"Not Finished\"));\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/WinUser/PycharmProjects/predictit2020/frontend/src/App.js"],"names":["React","USAMap","ELECTORAL_VOTES","Button","getCookie","name","cookieValue","document","cookie","cookies","split","i","length","substring","decodeURIComponent","App","states","setStates","useState","electoralVotes","setElectoralVotes","democrats","republicans","isFilled","Object","keys","mapHandler","event","stateId","target","dataset","newStates","JSON","parse","stringify","fill","position","marginTop","left","top","height","width","background","color","right","ev","res","fetch","method","mode","headers","body","console","log"],"mappings":"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","sourcesContent":["import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nimport USAMap from \"react-usa-map\";\n\nimport ELECTORAL_VOTES from \"./electoral_votes\"\n\nimport {Button} from \"@material-ui/core\"\n\nfunction getCookie(name) {\n    var cookieValue = null;\n    if (document.cookie && document.cookie !== '') {\n        var cookies = document.cookie.split(';');\n        for (var i = 0; i < cookies.length; i++) {\n            var cookie = cookies[i]\n            // Does this cookie string begin with the name we want?\n            if (cookie.substring(1, name.length + 1) === name) {\n                cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n                break;\n            }\n        }\n    }\n    return cookieValue;\n}\n\n\nfunction App() {\n\n    const [states, setStates] = React.useState({\n    })\n\n    const [electoralVotes, setElectoralVotes] = React.useState({\n        democrats: 0,\n        republicans: 0,\n    })\n\n  const isFilled = Object.keys(states).length == 1\n\n  const mapHandler = (event) => {\n    const stateId = event.target.dataset.name == 'DC' ? 'DC2' : event.target.dataset.name\n    let newStates = JSON.parse(JSON.stringify(states))\n    if (stateId in newStates) {\n        if(newStates[stateId].fill === 'navy') {\n            newStates[stateId].fill = 'red'\n            setElectoralVotes({\n                democrats: electoralVotes.democrats - ELECTORAL_VOTES[stateId],\n                republicans: electoralVotes.republicans + ELECTORAL_VOTES[stateId],\n            })\n        }\n        else {\n            newStates[stateId].fill = 'navy'\n            setElectoralVotes({\n                democrats: electoralVotes.democrats + ELECTORAL_VOTES[stateId],\n                republicans: electoralVotes.republicans - ELECTORAL_VOTES[stateId],\n            })\n        }\n    } else {\n        newStates[stateId] = {'fill': 'navy'}\n        setElectoralVotes({...electoralVotes, democrats: electoralVotes.democrats + ELECTORAL_VOTES[stateId]})\n    }\n    setStates(newStates)\n  };\n  return (\n    <div className=\"App\">\n        <div style={{position: \"relative\", marginTop: '50px'}}>\n            <div style={{position: \"absolute\", left: \"0px\" , top:\"-35px\", height: '40px', width: `${electoralVotes.republicans / 538 * 100}%` , background: \"red\"}}></div>\n            <div style={{position: \"absolute\", left:\"5%\", top:\"-25px\", color: '#999' }}>\n                Republicans: {electoralVotes.republicans}\n            </div>\n            <div style={{position: \"absolute\", right: \"0px\" , top:\"-35px\", height: '40px', width: `${electoralVotes.democrats / 538 * 100}%` , background: \"navy\"}}></div>\n            <div style={{position: \"absolute\", right:\"5%\", top:\"-25px\", color: '#999'}}>\n                Democrats: {electoralVotes.democrats}\n            </div>\n            <div style={{marginTop: '50px'}}>\n            <USAMap customize={states} onClick={mapHandler}  />\n        </div>\n        </div>\n        <Button\n            onClick={async ev => {\n                const res = await fetch(`/save/`, {\n                    method: 'POST',\n                    mode: 'cors',\n                    headers: {\n                        'X-CSRFToken': getCookie(\"csrftoken\"),\n                        'Content-Type': 'application/json',\n                        'Accept': 'application/json'\n                    },\n                    body: JSON.stringify(states)\n                })\n                console.log(res)\n            }}\n            variant=\"contained\" disabled={!isFilled} color=\"primary\" style={{marginTop: '50px'}}>\n            {isFilled ? \"Save\" : \"Not Finished\"}\n        </Button>\n\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}