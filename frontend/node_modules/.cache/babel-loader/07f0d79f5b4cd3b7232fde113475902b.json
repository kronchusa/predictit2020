{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\WinUser\\\\PycharmProjects\\\\predictit2020\\\\frontend\\\\src\\\\App.js\";\nimport React from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport { Link } from \"react-router-dom\";\nimport USAMap from \"react-usa-map\";\nimport ELECTORAL_VOTES from \"./electoral_votes\";\nimport { Button, TextField } from \"@material-ui/core\";\n\nfunction getCookie(name) {\n  const test_name = document.cookie;\n\n  if (test_name && test_name !== '') {\n    let cookies = test_name.split(';');\n    console.log(cookies);\n\n    for (let i = 0; i < cookies.length; i++) {\n      let cookie = cookies[i];\n      const [cookieName, val] = cookie.split(\"=\");\n      if (name === cookieName) return val;\n    }\n  }\n  /*\n  var cookieValue = null;\n  if (document.cookie && document.cookie !== '') {\n      var cookies = document.cookie.split(';');\n      for (var i = 0; i < cookies.length; i++) {\n          var cookie = cookies[i]\n          // Does this cookie string begin with the name we want?\n          if (cookie.substring(1, name.length + 1) === name) {\n              cookieValue = decodeURIComponent(cookie.substring(name.length + 2));\n              break;\n          }\n      }\n  } */\n\n\n  return cookieValue;\n}\n\nconst getParamsFromURL = paramsStr => {\n  let parameters = {};\n  if (paramsStr) paramsStr.split(\"?\")[1].split(\"&\").forEach(part => {\n    let item = part.split(\"=\");\n    parameters[item[0]] = decodeURIComponent(item[1]);\n  });\n  return parameters;\n};\n\nfunction App(props) {\n  const [loadingStatus, setLoadingStatus] = React.useState(0);\n  const [states, setStates] = React.useState({});\n  const [electoralVotes, setElectoralVotes] = React.useState({\n    democrats: 0,\n    republicans: 0\n  });\n  const [saveMessage, setSaveMessage] = React.useState(\"\");\n  const [baseUrl, setBaseUrl] = React.useState(\"\");\n  const [shareUrl, setShareUrl] = React.useState(\"\");\n  const [copied, setCopied] = React.useState(false);\n  const [username, setUsername] = React.useState(undefined);\n  const isFilled = Object.keys(states).length == 51;\n  const today = new Date();\n  const canSave = today < new Date(2020, 10, 3);\n  const viewId = getParamsFromURL(props.location.search)['view_id'];\n  React.useEffect(() => {\n    const fetchUserPrediction = async () => {\n      let res;\n      if (!viewId) res = await fetch(`/load/`);else res = await fetch(`/load/?view_id=${viewId}`);\n      if (res.status === 403) setLoadingStatus(2);else {\n        const raw_data = await res.json();\n        const base_url = raw_data.base_url;\n        setBaseUrl(base_url);\n        let json_data = JSON.parse(raw_data.prediction);\n        setShareUrl(`${base_url}/static/build/index.html?view_id=${json_data.id}`);\n        setUsername(raw_data.username);\n        delete json_data.number_correct;\n        delete json_data.id;\n        delete json_data.user;\n        json_data.ID = json_data.IDA;\n        delete json_data.IDA;\n        setElectoralVotes({\n          democrats: json_data.electoral_votes_dem,\n          republicans: json_data.electoral_votes_rep\n        });\n        delete json_data.electoral_votes_dem;\n        delete json_data.electoral_votes_rep;\n        setStates(json_data);\n        setLoadingStatus(1);\n      }\n    };\n\n    fetchUserPrediction();\n  }, []);\n\n  const mapHandler = event => {\n    if (!viewId) {\n      setSaveMessage(\"\");\n      const stateId = event.target.dataset.name == 'DC' ? 'DC2' : event.target.dataset.name;\n      let newStates = JSON.parse(JSON.stringify(states));\n\n      if (stateId in newStates) {\n        if (newStates[stateId].fill === 'navy') {\n          newStates[stateId].fill = 'red';\n          setElectoralVotes({\n            democrats: electoralVotes.democrats - ELECTORAL_VOTES[stateId],\n            republicans: electoralVotes.republicans + ELECTORAL_VOTES[stateId]\n          });\n        } else {\n          newStates[stateId].fill = 'navy';\n          setElectoralVotes({\n            democrats: electoralVotes.democrats + ELECTORAL_VOTES[stateId],\n            republicans: electoralVotes.republicans - ELECTORAL_VOTES[stateId]\n          });\n        }\n      } else {\n        newStates[stateId] = {\n          'fill': 'navy'\n        };\n        setElectoralVotes({ ...electoralVotes,\n          democrats: electoralVotes.democrats + ELECTORAL_VOTES[stateId]\n        });\n      }\n\n      setStates(newStates);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 5\n    }\n  }, loadingStatus === 0 ? \"Loading\" : loadingStatus === 2 ? \"Not Logged in properly, or invalid ID, unable to load\" : loadingStatus === 1 && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      position: \"relative\",\n      marginTop: '50px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      position: \"absolute\",\n      left: \"0px\",\n      top: \"10px\",\n      height: '40px',\n      width: `${electoralVotes.republicans / 538 * 100}%`,\n      background: \"red\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      position: \"absolute\",\n      right: \"0px\",\n      top: \"10px\",\n      height: '40px',\n      width: `${electoralVotes.democrats / 538 * 100}%`,\n      background: \"navy\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      position: \"absolute\",\n      left: \"5%\",\n      top: \"0px\",\n      color: '#999'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 25\n    }\n  }, \"Republicans: \", electoralVotes.republicans)), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      position: \"absolute\",\n      right: \"5%\",\n      top: \"0px\",\n      color: '#999'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 25\n    }\n  }, \"Democrats: \", electoralVotes.democrats)), viewId !== undefined && /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      paddingTop: '100px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 25\n    }\n  }, username, \"'s map\")), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      paddingTop: '100px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(USAMap, {\n    customize: states,\n    onClick: mapHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 25\n    }\n  }))), canSave ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 25\n    }\n  }, viewId === undefined && /*#__PURE__*/React.createElement(Button, {\n    onClick: async ev => {\n      const csrf_token = getCookie(\"csrftoken\");\n      console.log(csrf_token);\n      const res = await fetch(`/save/`, {\n        method: 'POST',\n        mode: 'cors',\n        headers: {\n          'X-CSRFToken': csrf_token,\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          states: states,\n          electoralVotes: electoralVotes\n        })\n      });\n      if (res.status === 200) setSaveMessage(\"Saved! You're all set! (You can modify it until November 3rd)\");else setSaveMessage(\"Did not save properly!  Please try clicking save again\");\n    },\n    variant: \"contained\",\n    disabled: !isFilled,\n    color: \"primary\",\n    style: {\n      marginTop: '50px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 54\n    }\n  }, isFilled ? \"Save My Prediction\" : \"Not Finished\")), viewId === undefined && /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      marginTop: '50px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 50\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 28\n    }\n  }, \"Share Link\"), /*#__PURE__*/React.createElement(TextField, {\n    value: shareUrl,\n    style: {\n      width: '75%'\n    },\n    onClick: ev => {\n      ev.target.select();\n      document.execCommand('copy');\n      setCopied(true);\n      setTimeout(() => {\n        setCopied(false);\n      }, 1500);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 28\n    }\n  })), viewId === undefined && /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      paddingBottom: '200px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 50\n    }\n  }, copied ? \"Copied!\" : \"Click to copy to Clipboard\"), viewId !== undefined && canSave && /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      marginTop: '50px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 61\n    }\n  }, \"This is \", username, \"'s prediction for the 2020 election, what's yours?  Give it a try yourself here!\", /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      paddingBottom: '200px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: `//${baseUrl}`,\n    target: \"_blank\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 33\n    }\n  }, \"Predict the Election\")))) : viewId === undefined && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 45\n    }\n  }, \"It is November 3rd (Or after) and you can't update your prediction anymore.\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 17\n    }\n  }, saveMessage)));\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/WinUser/PycharmProjects/predictit2020/frontend/src/App.js"],"names":["React","Link","USAMap","ELECTORAL_VOTES","Button","TextField","getCookie","name","test_name","document","cookie","cookies","split","console","log","i","length","cookieName","val","cookieValue","getParamsFromURL","paramsStr","parameters","forEach","part","item","decodeURIComponent","App","props","loadingStatus","setLoadingStatus","useState","states","setStates","electoralVotes","setElectoralVotes","democrats","republicans","saveMessage","setSaveMessage","baseUrl","setBaseUrl","shareUrl","setShareUrl","copied","setCopied","username","setUsername","undefined","isFilled","Object","keys","today","Date","canSave","viewId","location","search","useEffect","fetchUserPrediction","res","fetch","status","raw_data","json","base_url","json_data","JSON","parse","prediction","id","number_correct","user","ID","IDA","electoral_votes_dem","electoral_votes_rep","mapHandler","event","stateId","target","dataset","newStates","stringify","fill","position","marginTop","left","top","height","width","background","right","color","paddingTop","ev","csrf_token","method","mode","headers","body","select","execCommand","setTimeout","paddingBottom"],"mappings":"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","sourcesContent":["import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nimport {Link} from \"react-router-dom\"\n\nimport USAMap from \"react-usa-map\";\n\nimport ELECTORAL_VOTES from \"./electoral_votes\"\n\nimport {Button, TextField} from \"@material-ui/core\"\n\nfunction getCookie(name) {\n\n    const test_name = document.cookie\n\n    if (test_name && test_name !== '') {\n        let cookies = test_name.split(';')\n        console.log(cookies)\n\n        for(let i = 0;i < cookies.length; i++) {\n            let cookie = cookies[i]\n            const [cookieName, val] = cookie.split(\"=\")\n            if(name===cookieName) return val\n        }\n    }\n\n    /*\n    var cookieValue = null;\n    if (document.cookie && document.cookie !== '') {\n        var cookies = document.cookie.split(';');\n        for (var i = 0; i < cookies.length; i++) {\n            var cookie = cookies[i]\n            // Does this cookie string begin with the name we want?\n            if (cookie.substring(1, name.length + 1) === name) {\n                cookieValue = decodeURIComponent(cookie.substring(name.length + 2));\n                break;\n            }\n        }\n    } */\n    return cookieValue;\n}\n\nconst getParamsFromURL = (paramsStr) => {\n    let parameters = {}\n\n    if(paramsStr) paramsStr.split(\"?\")[1].split(\"&\").forEach(part => {\n        let item = part.split(\"=\")\n        parameters[item[0]] = decodeURIComponent(item[1])\n    })\n\n    return parameters\n\n}\n\n\n\nfunction App(props) {\n\n    const [loadingStatus, setLoadingStatus] = React.useState(0)\n    const [states, setStates] = React.useState({})\n    const [electoralVotes, setElectoralVotes] = React.useState({\n        democrats: 0,\n        republicans: 0,\n    })\n    const [saveMessage, setSaveMessage] = React.useState(\"\")\n    const [baseUrl, setBaseUrl] = React.useState(\"\")\n    const [shareUrl, setShareUrl] = React.useState(\"\")\n    const [copied, setCopied] = React.useState(false)\n    const [username, setUsername] = React.useState(undefined)\n\n  const isFilled = Object.keys(states).length == 51\n\n  const today = new Date()\n  const canSave = today < new Date(2020, 10, 3)\n\n  const viewId = getParamsFromURL(props.location.search)['view_id']\n\n  React.useEffect(() => {\n    const fetchUserPrediction = async () => {\n        let res\n        if(!viewId) res = await fetch(`/load/`)\n        else res = await fetch(`/load/?view_id=${viewId}`)\n        if(res.status === 403) setLoadingStatus(2)\n        else {\n            const raw_data = await res.json()\n            const base_url = raw_data.base_url\n            setBaseUrl(base_url)\n            let json_data = JSON.parse(raw_data.prediction)\n            setShareUrl(`${base_url}/static/build/index.html?view_id=${json_data.id}`)\n\n            setUsername(raw_data.username)\n            delete json_data.number_correct\n            delete json_data.id\n            delete json_data.user\n            json_data.ID = json_data.IDA\n            delete json_data.IDA\n            setElectoralVotes({democrats: json_data.electoral_votes_dem, republicans: json_data.electoral_votes_rep})\n            delete json_data.electoral_votes_dem\n            delete json_data.electoral_votes_rep\n            setStates(json_data)\n            setLoadingStatus(1)\n        }\n    }\n\n    fetchUserPrediction()\n  }, [])\n\n  const mapHandler = (event) => {\n    if(!viewId){\n        setSaveMessage(\"\")\n        const stateId = event.target.dataset.name == 'DC' ? 'DC2' : event.target.dataset.name\n        let newStates = JSON.parse(JSON.stringify(states))\n        if (stateId in newStates) {\n            if(newStates[stateId].fill === 'navy') {\n                newStates[stateId].fill = 'red'\n                setElectoralVotes({\n                    democrats: electoralVotes.democrats - ELECTORAL_VOTES[stateId],\n                    republicans: electoralVotes.republicans + ELECTORAL_VOTES[stateId],\n                })\n            }\n            else {\n                newStates[stateId].fill = 'navy'\n                setElectoralVotes({\n                    democrats: electoralVotes.democrats + ELECTORAL_VOTES[stateId],\n                    republicans: electoralVotes.republicans - ELECTORAL_VOTES[stateId],\n                })\n            }\n        } else {\n            newStates[stateId] = {'fill': 'navy'}\n            setElectoralVotes({...electoralVotes, democrats: electoralVotes.democrats + ELECTORAL_VOTES[stateId]})\n        }\n        setStates(newStates)\n    }\n  };\n  return (\n    <div className=\"App\">\n        {loadingStatus === 0 ? \"Loading\" : loadingStatus === 2 ? \"Not Logged in properly, or invalid ID, unable to load\" : loadingStatus === 1 && (\n            <>\n                <div style={{position: \"relative\", marginTop: '50px'}}>\n                    <div style={{position: \"absolute\", left: \"0px\" , top:\"10px\", height: '40px', width: `${electoralVotes.republicans / 538 * 100}%` , background: \"red\"}}></div>\n                    <div style={{position: \"absolute\", right: \"0px\" , top:\"10px\", height: '40px', width: `${electoralVotes.democrats / 538 * 100}%` , background: \"navy\"}}></div>\n                    <div style={{position: \"absolute\", left:\"5%\", top:\"0px\", color: '#999' }}>\n                        <h3>Republicans: {electoralVotes.republicans}</h3>\n                    </div>\n\n                    <div style={{position: \"absolute\", right:\"5%\", top:\"0px\", color: '#999'}}>\n                        <h3>Democrats: {electoralVotes.democrats}</h3>\n                    </div>\n                    {viewId !== undefined && (\n                    <div style={{paddingTop: '100px'}}>\n                        <h1>{username}'s map</h1>\n                    </div>\n                    )}\n                    <div style={{paddingTop: '100px'}}>\n                        <USAMap customize={states} onClick={mapHandler}  />\n                    </div>\n                </div>\n                {canSave ? (\n                    <>\n                        <div>\n                            {viewId === undefined && <Button\n                                onClick={async ev => {\n                                    const csrf_token = getCookie(\"csrftoken\")\n                                    console.log(csrf_token)\n\n                                    const res = await fetch(`/save/`, {\n                                        method: 'POST',\n                                        mode: 'cors',\n                                        headers: {\n                                            'X-CSRFToken': csrf_token,\n                                            'Content-Type': 'application/json',\n                                        },\n                                        body: JSON.stringify({states: states, electoralVotes: electoralVotes})\n                                    })\n                                    if(res.status === 200) setSaveMessage(\"Saved! You're all set! (You can modify it until November 3rd)\")\n                                    else setSaveMessage(\"Did not save properly!  Please try clicking save again\")\n                                }}\n                                variant=\"contained\" disabled={!isFilled} color=\"primary\" style={{marginTop: '50px'}}>\n                                {isFilled ? \"Save My Prediction\" : \"Not Finished\"}\n                            </Button>}\n                        </div>\n                        {viewId === undefined && <div style={{marginTop: '50px'}}>\n                           <p>Share Link</p>\n                           <TextField\n                            value={shareUrl}\n                            style={{width: '75%'}}\n                            onClick={ev => {\n                                ev.target.select()\n                                document.execCommand('copy')\n                                setCopied(true)\n                                setTimeout(()=> {\n                                    setCopied(false)\n                                }, 1500)\n                            }}\n                           />\n                        </div>}\n                        {viewId === undefined && <p style={{paddingBottom: '200px'}}>{copied ? \"Copied!\" : \"Click to copy to Clipboard\"}</p>}\n                        {viewId !== undefined && canSave && <div style={{marginTop: '50px'}}>\n                            This is {username}'s prediction for the 2020 election, what's yours?  Give it a try yourself here!\n                            <div style={{paddingBottom: '200px'}}>\n                                <Link to={`//${baseUrl}`} target=\"_blank\">\n                                    Predict the Election\n                                </Link>\n                            </div>\n                        </div>}\n                    </>\n                ) : (\n                    viewId === undefined && <p>It is November 3rd (Or after) and you can't update your prediction anymore.</p>\n                )}\n\n                <p>{saveMessage}</p>\n            </>\n        )}\n\n\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}