{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\WinUser\\\\PycharmProjects\\\\predictit2020\\\\frontend\\\\src\\\\App.js\";\nimport React from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport USAMap from \"react-usa-map\";\nimport ELECTORAL_VOTES from \"./electoral_votes\";\n\nfunction App() {\n  const [states, setStates] = React.useState({});\n  const [electoralVotes, setElectoralVotes] = React.useState({\n    democrats: 0,\n    republicans: 0\n  });\n  const isFilled = Object.keys(states).length == 51;\n\n  const mapHandler = event => {\n    const stateId = event.target.dataset.name == 'DC' ? 'DC2' : event.target.dataset.name;\n    let newStates = JSON.parse(JSON.stringify(states));\n\n    if (stateId in newStates) {\n      if (newStates[stateId].fill === 'navy') {\n        newStates[stateId].fill = 'red';\n        setElectoralVotes({\n          democrats: electoralVotes.democrats - ELECTORAL_VOTES[stateId],\n          republicans: electoralVotes.republicans + ELECTORAL_VOTES[stateId]\n        });\n      } else {\n        newStates[stateId].fill = 'navy';\n        setElectoralVotes({\n          democrats: electoralVotes.democrats + ELECTORAL_VOTES[stateId],\n          republicans: electoralVotes.republicans - ELECTORAL_VOTES[stateId]\n        });\n      }\n    } else {\n      newStates[stateId] = {\n        'fill': 'navy'\n      };\n      setElectoralVotes({ ...electoralVotes,\n        democrats: electoralVotes.democrats + ELECTORAL_VOTES[stateId]\n      });\n    }\n\n    setStates(newStates);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      width: '200px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }), \"Republicans: \", electoralVotes.republicans, \"  Democrats: \", electoralVotes.democrats, \" \", isFilled, /*#__PURE__*/React.createElement(USAMap, {\n    customize: states,\n    onClick: mapHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/WinUser/PycharmProjects/predictit2020/frontend/src/App.js"],"names":["React","USAMap","ELECTORAL_VOTES","App","states","setStates","useState","electoralVotes","setElectoralVotes","democrats","republicans","isFilled","Object","keys","length","mapHandler","event","stateId","target","dataset","name","newStates","JSON","parse","stringify","fill","width"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,OAAO,WAAP;AAEA,OAAOC,MAAP,MAAmB,eAAnB;AAEA,OAAOC,eAAP,MAA4B,mBAA5B;;AAEA,SAASC,GAAT,GAAe;AAEX,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBL,KAAK,CAACM,QAAN,CAAe,EAAf,CAA5B;AAGA,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCR,KAAK,CAACM,QAAN,CAAe;AACvDG,IAAAA,SAAS,EAAE,CAD4C;AAEvDC,IAAAA,WAAW,EAAE;AAF0C,GAAf,CAA5C;AAKF,QAAMC,QAAQ,GAAGC,MAAM,CAACC,IAAP,CAAYT,MAAZ,EAAoBU,MAApB,IAA8B,EAA/C;;AAEA,QAAMC,UAAU,GAAIC,KAAD,IAAW;AAC5B,UAAMC,OAAO,GAAGD,KAAK,CAACE,MAAN,CAAaC,OAAb,CAAqBC,IAArB,IAA6B,IAA7B,GAAoC,KAApC,GAA4CJ,KAAK,CAACE,MAAN,CAAaC,OAAb,CAAqBC,IAAjF;AACA,QAAIC,SAAS,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAepB,MAAf,CAAX,CAAhB;;AACA,QAAIa,OAAO,IAAII,SAAf,EAA0B;AACtB,UAAGA,SAAS,CAACJ,OAAD,CAAT,CAAmBQ,IAAnB,KAA4B,MAA/B,EAAuC;AACnCJ,QAAAA,SAAS,CAACJ,OAAD,CAAT,CAAmBQ,IAAnB,GAA0B,KAA1B;AACAjB,QAAAA,iBAAiB,CAAC;AACdC,UAAAA,SAAS,EAAEF,cAAc,CAACE,SAAf,GAA2BP,eAAe,CAACe,OAAD,CADvC;AAEdP,UAAAA,WAAW,EAAEH,cAAc,CAACG,WAAf,GAA6BR,eAAe,CAACe,OAAD;AAF3C,SAAD,CAAjB;AAIH,OAND,MAOK;AACDI,QAAAA,SAAS,CAACJ,OAAD,CAAT,CAAmBQ,IAAnB,GAA0B,MAA1B;AACAjB,QAAAA,iBAAiB,CAAC;AACdC,UAAAA,SAAS,EAAEF,cAAc,CAACE,SAAf,GAA2BP,eAAe,CAACe,OAAD,CADvC;AAEdP,UAAAA,WAAW,EAAEH,cAAc,CAACG,WAAf,GAA6BR,eAAe,CAACe,OAAD;AAF3C,SAAD,CAAjB;AAIH;AACJ,KAfD,MAeO;AACHI,MAAAA,SAAS,CAACJ,OAAD,CAAT,GAAqB;AAAC,gBAAQ;AAAT,OAArB;AACAT,MAAAA,iBAAiB,CAAC,EAAC,GAAGD,cAAJ;AAAoBE,QAAAA,SAAS,EAAEF,cAAc,CAACE,SAAf,GAA2BP,eAAe,CAACe,OAAD;AAAzE,OAAD,CAAjB;AACH;;AACDZ,IAAAA,SAAS,CAACgB,SAAD,CAAT;AACD,GAvBD;;AAwBA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAM,IAAA,KAAK,EAAE;AAACK,MAAAA,KAAK,EAAE;AAAR,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,mBAKgBnB,cAAc,CAACG,WAL/B,mBAKyDH,cAAc,CAACE,SALxE,OAKoFE,QALpF,eAME,oBAAC,MAAD;AAAQ,IAAA,SAAS,EAAEP,MAAnB;AAA2B,IAAA,OAAO,EAAEW,UAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,CADF;AAUD;;AAED,eAAeZ,GAAf","sourcesContent":["import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nimport USAMap from \"react-usa-map\";\n\nimport ELECTORAL_VOTES from \"./electoral_votes\"\n\nfunction App() {\n\n    const [states, setStates] = React.useState({\n    })\n\n    const [electoralVotes, setElectoralVotes] = React.useState({\n        democrats: 0,\n        republicans: 0,\n    })\n\n  const isFilled = Object.keys(states).length == 51\n\n  const mapHandler = (event) => {\n    const stateId = event.target.dataset.name == 'DC' ? 'DC2' : event.target.dataset.name\n    let newStates = JSON.parse(JSON.stringify(states))\n    if (stateId in newStates) {\n        if(newStates[stateId].fill === 'navy') {\n            newStates[stateId].fill = 'red'\n            setElectoralVotes({\n                democrats: electoralVotes.democrats - ELECTORAL_VOTES[stateId],\n                republicans: electoralVotes.republicans + ELECTORAL_VOTES[stateId],\n            })\n        }\n        else {\n            newStates[stateId].fill = 'navy'\n            setElectoralVotes({\n                democrats: electoralVotes.democrats + ELECTORAL_VOTES[stateId],\n                republicans: electoralVotes.republicans - ELECTORAL_VOTES[stateId],\n            })\n        }\n    } else {\n        newStates[stateId] = {'fill': 'navy'}\n        setElectoralVotes({...electoralVotes, democrats: electoralVotes.democrats + ELECTORAL_VOTES[stateId]})\n    }\n    setStates(newStates)\n  };\n  return (\n    <div className=\"App\">\n      <span style={{width: '200px'}}>\n\n      </span>\n\n      Republicans: {electoralVotes.republicans}  Democrats: {electoralVotes.democrats} {isFilled}\n      <USAMap customize={states} onClick={mapHandler} />\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}