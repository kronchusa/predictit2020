{"version":3,"sources":["logo.svg","electoral_votes.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","ELECTORAL_VOTES","AL","AK","AZ","AR","CA","CO","CT","DC2","DE","FL","GA","HI","ID","IL","IN","IA","KS","KY","LA","ME","MD","MA","MI","MN","MS","MO","MT","NE","NV","NH","NJ","NM","NY","NC","ND","OH","OK","OR","PA","RI","SC","SD","TN","TX","UT","VT","VA","WA","WV","WI","WY","getCookie","name","document","cookie","cookies","split","i","length","cookieName","val","trim","App","props","React","useState","loadingStatus","setLoadingStatus","states","setStates","democrats","republicans","electoralVotes","setElectoralVotes","saveMessage","setSaveMessage","baseUrl","setBaseUrl","shareUrl","setShareUrl","copied","setCopied","undefined","username","setUsername","isFilled","Object","keys","canSave","Date","viewId","paramsStr","parameters","forEach","part","item","decodeURIComponent","getParamsFromURL","location","search","statesLeft","useEffect","a","fetch","res","status","json","raw_data","base_url","json_data","JSON","parse","prediction","id","number_correct","user","IDA","electoral_votes_dem","electoral_votes_rep","fetchUserPrediction","className","style","position","marginTop","left","top","height","width","background","right","color","paddingTop","customize","onClick","event","stateId","target","dataset","newStates","stringify","fill","Button","ev","csrf_token","method","mode","headers","body","variant","disabled","TextField","value","select","execCommand","setTimeout","paddingBottom","to","Boolean","window","hostname","match","ReactDOM","render","StrictMode","link","component","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.c74308ac.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","const ELECTORAL_VOTES = {\r\n    AL: 9,\r\n    AK: 3,\r\n    AZ: 11,\r\n    AR: 6,\r\n    CA: 55,\r\n    CO: 9,\r\n    CT: 7,\r\n    DC2: 3,\r\n    DE: 3,\r\n    FL: 29,\r\n    GA: 16,\r\n    HI: 4,\r\n    ID: 4,\r\n    IL: 20,\r\n    IN: 11,\r\n    IA: 6,\r\n    KS: 6,\r\n    KY: 8,\r\n    LA: 8,\r\n    ME: 4,\r\n    MD: 10,\r\n    MA: 11,\r\n    MI: 16,\r\n    MN: 10,\r\n    MS: 6,\r\n    MO: 10,\r\n    MT: 3,\r\n    NE: 5,\r\n    NV: 6,\r\n    NH: 4,\r\n    NJ: 14,\r\n    NM: 5,\r\n    NY: 29,\r\n    NC: 15,\r\n    ND: 3,\r\n    OH: 18,\r\n    OK: 7,\r\n    OR: 7,\r\n    PA: 20,\r\n    RI: 4,\r\n    SC: 9,\r\n    SD: 3,\r\n    TN: 11,\r\n    TX: 38,\r\n    UT: 6,\r\n    VT: 3,\r\n    VA: 13,\r\n    WA: 12,\r\n    WV: 5,\r\n    WI: 10,\r\n    WY: 3\r\n}\r\n\r\nexport default ELECTORAL_VOTES","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nimport {Link} from \"react-router-dom\"\n\nimport USAMap from \"react-usa-map\";\n\nimport ELECTORAL_VOTES from \"./electoral_votes\"\n\nimport {Button, TextField} from \"@material-ui/core\"\n\nfunction getCookie(name) {\n\n    const test_name = document.cookie\n\n    if (document.cookie && document.cookie !== '') {\n        let cookies = document.cookie.split(';')\n\n        for(let i = 0;i < cookies.length; i++) {\n            let cookie = cookies[i]\n            let [cookieName, val] = cookie.split(\"=\")\n            cookieName = cookieName.trim()\n            if(name===cookieName) return val\n        }\n    }\n\n    return null\n\n}\n\nconst getParamsFromURL = (paramsStr) => {\n    let parameters = {}\n\n    if(paramsStr) paramsStr.split(\"?\")[1].split(\"&\").forEach(part => {\n        let item = part.split(\"=\")\n        parameters[item[0]] = decodeURIComponent(item[1])\n    })\n\n    return parameters\n\n}\n\n\n\nfunction App(props) {\n\n    const [loadingStatus, setLoadingStatus] = React.useState(0)\n    const [states, setStates] = React.useState({})\n    const [electoralVotes, setElectoralVotes] = React.useState({\n        democrats: 0,\n        republicans: 0,\n    })\n    const [saveMessage, setSaveMessage] = React.useState(\"\")\n    const [baseUrl, setBaseUrl] = React.useState(\"\")\n    const [shareUrl, setShareUrl] = React.useState(\"\")\n    const [copied, setCopied] = React.useState(false)\n    const [username, setUsername] = React.useState(undefined)\n\n  const isFilled = Object.keys(states).length == 51\n\n  const today = new Date()\n  const canSave = today < new Date(2020, 10, 3)\n\n  const viewId = getParamsFromURL(props.location.search)['view_id']\n\n  const statesLeft = 51 - Object.keys(states).length\n\n  React.useEffect(() => {\n    const fetchUserPrediction = async () => {\n        let res\n        if(!viewId) res = await fetch(`/load/`)\n        else res = await fetch(`/load/?view_id=${viewId}`)\n        if(res.status === 403) setLoadingStatus(2)\n        else {\n            const raw_data = await res.json()\n            const base_url = raw_data.base_url\n            setBaseUrl(base_url)\n            let json_data = JSON.parse(raw_data.prediction)\n            setShareUrl(`${base_url}/static/build/index.html?view_id=${json_data.id}`)\n\n            setUsername(raw_data.username)\n            delete json_data.number_correct\n            delete json_data.id\n            delete json_data.user\n            json_data.ID = json_data.IDA\n            delete json_data.IDA\n            setElectoralVotes({democrats: json_data.electoral_votes_dem, republicans: json_data.electoral_votes_rep})\n            delete json_data.electoral_votes_dem\n            delete json_data.electoral_votes_rep\n            setStates(json_data)\n            setLoadingStatus(1)\n        }\n    }\n\n    fetchUserPrediction()\n  }, [])\n\n  const mapHandler = (event) => {\n    if(!viewId){\n        setSaveMessage(\"\")\n        const stateId = event.target.dataset.name == 'DC' ? 'DC2' : event.target.dataset.name\n        let newStates = JSON.parse(JSON.stringify(states))\n        if (stateId in newStates) {\n            if(newStates[stateId].fill === 'navy') {\n                newStates[stateId].fill = 'red'\n                setElectoralVotes({\n                    democrats: electoralVotes.democrats - ELECTORAL_VOTES[stateId],\n                    republicans: electoralVotes.republicans + ELECTORAL_VOTES[stateId],\n                })\n            }\n            else {\n                newStates[stateId].fill = 'navy'\n                setElectoralVotes({\n                    democrats: electoralVotes.democrats + ELECTORAL_VOTES[stateId],\n                    republicans: electoralVotes.republicans - ELECTORAL_VOTES[stateId],\n                })\n            }\n        } else {\n            newStates[stateId] = {'fill': 'navy'}\n            setElectoralVotes({...electoralVotes, democrats: electoralVotes.democrats + ELECTORAL_VOTES[stateId]})\n        }\n        setStates(newStates)\n    }\n  };\n  return (\n    <div className=\"App\">\n        {loadingStatus === 0 ? \"Loading\" : loadingStatus === 2 ? \"Not Logged in properly, or invalid ID, unable to load\" : loadingStatus === 1 && (\n            <>\n                <div style={{position: \"relative\", marginTop: '50px'}}>\n                    <div style={{position: \"absolute\", left: \"0px\" , top:\"10px\", height: '40px', width: `${electoralVotes.republicans / 538 * 100}%` , background: \"red\"}}></div>\n                    <div style={{position: \"absolute\", right: \"0px\" , top:\"10px\", height: '40px', width: `${electoralVotes.democrats / 538 * 100}%` , background: \"navy\"}}></div>\n                    <div style={{position: \"absolute\", left:\"5%\", top:\"0px\", color: '#999' }}>\n                        <h3>Republicans: {electoralVotes.republicans}</h3>\n                    </div>\n\n                    <div style={{position: \"absolute\", right:\"5%\", top:\"0px\", color: '#999'}}>\n                        <h3>Democrats: {electoralVotes.democrats}</h3>\n                    </div>\n                    {viewId !== undefined && (\n                    <div style={{paddingTop: '100px'}}>\n                        <h1>{username}'s map</h1>\n                    </div>\n                    )}\n                    <div style={{paddingTop: '100px'}}>\n                        <USAMap customize={states} onClick={mapHandler}  />\n                    </div>\n                </div>\n                {canSave ? (\n                    <>\n                        <div>\n                            {viewId === undefined && <Button\n                                onClick={async ev => {\n                                    const csrf_token = getCookie(\"csrftoken\")\n\n                                    const res = await fetch(`/save/`, {\n                                        method: 'POST',\n                                        mode: 'cors',\n                                        headers: {\n                                            'X-CSRFToken': csrf_token,\n                                            'Content-Type': 'application/json',\n                                        },\n                                        body: JSON.stringify({states: states, electoralVotes: electoralVotes})\n                                    })\n                                    if(res.status === 200) setSaveMessage(\"Saved! You're all set! (You can modify it until November 3rd)\")\n                                    else setSaveMessage(\"Did not save properly!  Please try clicking save again\")\n                                }}\n                                variant=\"contained\" disabled={!isFilled} color=\"primary\" style={{marginTop: '50px'}}>\n                                {isFilled ? \"Save My Prediction\" : statesLeft > 1 ? `${statesLeft} States Left` : 'DC2' in states ? \"1 State Left!\" : \"Don't forget Washington D.C.!\"}\n                            </Button>}\n                        </div>\n                        {viewId === undefined && <div style={{marginTop: '50px'}}>\n                           <p>Share Link</p>\n                           <TextField\n                            value={shareUrl}\n                            style={{width: '75%'}}\n                            onClick={ev => {\n                                ev.target.select()\n                                document.execCommand('copy')\n                                setCopied(true)\n                                setTimeout(()=> {\n                                    setCopied(false)\n                                }, 1500)\n                            }}\n                           />\n                        </div>}\n                        {viewId === undefined && <p style={{paddingBottom: '200px'}}>{copied ? \"Copied!\" : \"Click to copy to Clipboard\"}</p>}\n                        {viewId !== undefined && canSave && <div style={{marginTop: '50px'}}>\n                            This is {username}'s prediction for the 2020 election, what's yours?  Give it a try yourself here!\n                            <div style={{paddingBottom: '200px'}}>\n                                <Link to={`//${baseUrl}`} target=\"_blank\">\n                                    Predict the Election\n                                </Link>\n                            </div>\n                        </div>}\n                    </>\n                ) : (\n                    viewId === undefined && <p>It is November 3rd (Or after) and you can't update your prediction anymore.</p>\n                )}\n\n                <p>{saveMessage}</p>\n            </>\n        )}\n\n\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter, Route, Link} from \"react-router-dom\"\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n        <Route link=\"/\" component={App} />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}